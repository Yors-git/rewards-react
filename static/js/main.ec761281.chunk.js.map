{"version":3,"sources":["context/ClientContext.jsx","context/client-data.js","context/ClientProvider.jsx","components/client-search-component/client-search-form.component.jsx","components/client-create-component/client-create.component.jsx","components/client-show/client-show.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["defaultContext","Object","freeze","ClientContext","createContext","useClientContextProvider","useContext","clientData","clientName","id","transactions","purchase","reward","transDate","Date","ClientContextProvider","children","useState","userData","setUserData","currentClient","setCurrentClient","context","data","commands","storeData","name","length","fixCurrentClient","client","updatedTransClient","higherLimitDate","setMonth","getMonth","lowerLimitDate","interval","filter","rew","removeOlderTransactions","addTransToClient","trans","transaction","push","getTransByInterval","clientTrans","higher","lower","map","item","reduce","prev","next","Provider","value","ClientSearchForm","setClient","Row","className","Form","onSubmit","e","preventDefault","foundClient","find","it","alert","Group","Label","Control","placeholder","onChange","target","Button","type","variant","ClientCreateForm","ClientShow","amount","setAmount","Container","Col","xs","size","Table","striped","bordered","hover","indexOf","toLocaleString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec761281.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nconst defaultContext = Object.freeze({});\nexport const ClientContext = createContext(defaultContext);\n\nexport const useClientContextProvider = () => {\n\tconst context = useContext(ClientContext);\n\treturn context;\n};\n","const clientData = [\n\t{\n\t\tclientName: 'Jorge',\n\t\tid: 1,\n\t\ttransactions: [\n\t\t\t{\n\t\t\t\tpurchase: '120',\n\t\t\t\treward: 90,\n\t\t\t\ttransDate: new Date('7/4/2021, 1:51:52 PM')\n\t\t\t},\n\t\t\t{\n\t\t\t\tpurchase: '80',\n\t\t\t\treward: 30,\n\t\t\t\ttransDate: new Date('6/4/2021, 1:51:52 PM')\n\t\t\t},\n\t\t\t{\n\t\t\t\tpurchase: '130',\n\t\t\t\treward: 110,\n\t\t\t\ttransDate: new Date('5/4/2021, 1:51:52 PM')\n\t\t\t},\n\t\t\t{\n\t\t\t\tpurchase: '120',\n\t\t\t\treward: 90,\n\t\t\t\ttransDate: new Date('3/4/2021, 1:51:52 PM')\n\t\t\t}\n\t\t]\n\t}\n];\n\nexport default clientData;\n","import { useState } from 'react';\nimport { ClientContext } from './ClientContext';\nimport clientData from './client-data.js';\n\nexport const ClientContextProvider = ({ children }) => {\n\tconst [userData, setUserData] = useState(clientData);\n\tconst [currentClient, setCurrentClient] = useState({});\n\n\tconst storeData = name => {\n\t\tname['id'] = userData.length + 1;\n\t\tname['transactions'] = [];\n\t\tsetUserData([...userData, name]);\n\t};\n\n\tconst getTransByInterval = (clientTrans, higher, lower) => {\n\t\tconst higherLimitDate = new Date();\n\t\thigherLimitDate.setMonth(higherLimitDate.getMonth() - higher);\n\t\tconst lowerLimitDate = new Date();\n\t\tlowerLimitDate.setMonth(lowerLimitDate.getMonth() - lower);\n\t\tconst interval = clientTrans.transactions.filter(\n\t\t\trew => rew.transDate > lowerLimitDate && rew.transDate < higherLimitDate\n\t\t);\n\t\tif (interval.length > 0) {\n\t\t\tconst total = interval\n\t\t\t\t.map(item => item.reward)\n\t\t\t\t.reduce((prev, next) => prev + next);\n\t\t\treturn total;\n\t\t} else {\n\t\t\tconst total = 0;\n\t\t\treturn total;\n\t\t}\n\t};\n\n\tconst removeOlderTransactions = client => {\n\t\tconst updatedTransClient = client;\n\t\tconst higherLimitDate = new Date();\n\t\thigherLimitDate.setMonth(higherLimitDate.getMonth() - 0);\n\t\tconst lowerLimitDate = new Date();\n\t\tlowerLimitDate.setMonth(lowerLimitDate.getMonth() - 3);\n\t\tconst interval = updatedTransClient.transactions.filter(\n\t\t\trew => rew.transDate > lowerLimitDate && rew.transDate < higherLimitDate\n\t\t);\n\t\tupdatedTransClient.transactions = interval;\n\t};\n\n\tconst fixCurrentClient = client => {\n\t\tremoveOlderTransactions(client);\n\t\tsetCurrentClient(client);\n\t};\n\n\tfunction rewards(purchase) {\n\t\tlet reward;\n\t\tif (purchase <= 50) {\n\t\t\treward = 0;\n\t\t} else if (purchase > 50 && purchase <= 100) {\n\t\t\treward = purchase - 50;\n\t\t} else {\n\t\t\treward = (purchase - 100) * 2 + 50;\n\t\t}\n\t\tlet transDate = new Date();\n\n\t\treturn { reward, transDate, purchase };\n\t}\n\n\tconst addTransToClient = trans => {\n\t\tconst transaction = rewards(trans);\n\t\tcurrentClient.transactions.push(transaction);\n\t};\n\n\tconst context = {\n\t\tdata: { userData, currentClient },\n\t\tcommands: { storeData, fixCurrentClient, addTransToClient, getTransByInterval }\n\t};\n\treturn (\n\t\t<ClientContext.Provider value={context}>{children}</ClientContext.Provider>\n\t);\n};\n","import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { useClientContextProvider } from '../../context/ClientContext';\n\nconst ClientSearchForm = () => {\n\tconst {\n\t\tdata: { userData },\n\t\tcommands: { fixCurrentClient }\n\t} = useClientContextProvider();\n\tconst [client, setClient] = useState({ clientName: '' });\n\n\tconst handleOnChange = e => {\n\t\te.preventDefault();\n\t\tsetClient({ [e.target.name]: e.target.value });\n\t};\n\n\tconst handleOnSubmit = e => {\n\t\te.preventDefault(e);\n\t\tconst foundClient = userData.find(\n\t\t\tit => it.clientName === client.clientName\n\t\t);\n\t\tif (foundClient) {\n\t\t\tfixCurrentClient(foundClient);\n\t\t\tsetClient({ clientName: '' });\n\t\t} else {\n\t\t\tsetClient({ clientName: '' });\n\t\t\treturn alert(\"User doesn't exists please create it first\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<Row className='justify-content-md-center p-3'>\n\t\t\t<Form onSubmit={handleOnSubmit}>\n\t\t\t\t<Form.Group className='align-items-center col-xs-3'>\n\t\t\t\t\t<Form.Label><h5>Search Client</h5></Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName='mb-2'\n\t\t\t\t\t\tplaceholder='Enter name please'\n\t\t\t\t\t\tonChange={handleOnChange}\n\t\t\t\t\t\tvalue={client.clientName}\n            name='clientName'\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button type='submit' variant='success' className='mb-2'>\n\t\t\t\t\tSearch Client\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</Row>\n\t);\n};\n\nexport default ClientSearchForm;\n","import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { useClientContextProvider } from '../../context/ClientContext';\n\nconst ClientCreateForm = () => {\n\tconst {\n\t\tdata: { userData },\n\t\tcommands: { storeData, fixCurrentClient }\n\t} = useClientContextProvider();\n\tconst [client, setClient] = useState({ clientName: '' });\n\n\tconst handleOnChange = e => {\n\t\te.preventDefault();\n\t\tsetClient({ [e.target.name]: e.target.value });\n\t};\n\n\tconst handleOnSubmit = e => {\n\t\te.preventDefault(e);\n\t\tif (userData.find(it => it.clientName === client.clientName)) {\n\t\t\tsetClient({ clientName: '' });\n\t\t\treturn alert('User already exists, please try another one');\n\t\t}\n\t\tstoreData(client);\n\t\tfixCurrentClient(client);\n\t\tsetClient({ clientName: '' });\n\t};\n\n\treturn (\n\t\t<Row className='justify-content-md-center p-3'>\n\t\t\t<Form onSubmit={handleOnSubmit}>\n\t\t\t\t<Form.Group className='align-items-center'>\n\t\t\t\t\t<Form.Label>\n\t\t\t\t\t\t<h5>Create New Client</h5>\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName='mb-2'\n\t\t\t\t\t\tplaceholder='Enter name please'\n\t\t\t\t\t\tonChange={handleOnChange}\n\t\t\t\t\t\tvalue={client.clientName}\n\t\t\t\t\t\tname='clientName'\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button type='submit' variant='primary' className='mb-2'>\n\t\t\t\t\tCreate Client\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</Row>\n\t);\n};\n\nexport default ClientCreateForm;\n","import { useState } from 'react';\nimport { useClientContextProvider } from '../../context/ClientContext';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\n\nconst ClientShow = () => {\n\tconst [amount, setAmount] = useState('');\n\tconst {\n\t\tdata: { currentClient },\n\t\tcommands: { addTransToClient, getTransByInterval }\n\t} = useClientContextProvider();\n\n\tconst showTransactions = () => {\n\t\treturn (\n\t\t\t<Table striped bordered hover size='sm'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t<th>Transaction Date</th>\n\t\t\t\t\t\t<th>Purchase Amount</th>\n\t\t\t\t\t\t<th>Reward</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{currentClient.transactions.map(trans => (\n\t\t\t\t\t\t<tr key={currentClient.transactions.indexOf(trans) + 1}>\n\t\t\t\t\t\t\t<td>{currentClient.transactions.indexOf(trans) + 1}</td>\n\t\t\t\t\t\t\t<td>{trans.transDate.toLocaleString()}</td>\n\t\t\t\t\t\t\t<td>{trans.purchase}</td>\n\t\t\t\t\t\t\t<td>{trans.reward}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t};\n\n\tconst handleOnChange = e => {\n\t\te.preventDefault(e);\n\t\tsetAmount(e.target.value);\n\t};\n\n\tconst addTransaction = e => {\n\t\te.preventDefault(e);\n\t\taddTransToClient(amount);\n\t\tsetAmount('');\n\t};\n\n\treturn (\n\t\t<Container className='mt-5 justify-content-start'>\n\t\t\t<Col xs='auto'>\n\t\t\t\t{currentClient?.clientName && (\n\t\t\t\t\t<Form onSubmit={addTransaction}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Row className='justify-content-start'>\n\t\t\t\t\t\t\t\t<Form.Label className='px-3'>\n\t\t\t\t\t\t\t\t\t<strong>Create New Transaction</strong>\n\t\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row className='justify-content-start'>\n\t\t\t\t\t\t\t\t<Col xs='auto'>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\t\tclassName='mb-2'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Amount'\n\t\t\t\t\t\t\t\t\t\tname='amount'\n\t\t\t\t\t\t\t\t\t\tonChange={handleOnChange}\n\t\t\t\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs='auto'>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tvariant='warning'\n\t\t\t\t\t\t\t\t\t\tclassName='mb-2'\n\t\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tAdd Transaction\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h3 className='p-3'>{`${currentClient.clientName}'s Transaction Summary:`}</h3>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<p className='px-3'>\n\t\t\t\t\t\t\t\tTotal reward points:{' '}\n\t\t\t\t\t\t\t\t<strong>{getTransByInterval(currentClient, 0, 3)}</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='px-3'>\n\t\t\t\t\t\t\t\tThis Month:{' '}\n\t\t\t\t\t\t\t\t<strong>{getTransByInterval(currentClient, 0, 1)}</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='px-3'>\n\t\t\t\t\t\t\t\tLast Month:{' '}\n\t\t\t\t\t\t\t\t<strong>{getTransByInterval(currentClient, 1, 2)}</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='px-3'>\n\t\t\t\t\t\t\t\t2 Months ago:{' '}\n\t\t\t\t\t\t\t\t<strong>{getTransByInterval(currentClient, 2, 3)}</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t\t{currentClient?.transactions?.length > 0\n\t\t\t\t\t? showTransactions()\n\t\t\t\t\t: currentClient.clientName && (\n\t\t\t\t\t\t\t<Row className='justify-content-start px-3'>\n\t\t\t\t\t\t\t\tNo valid transactions at the moment\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t  )}\n\t\t\t</Col>\n\t\t</Container>\n\t);\n};\n\nexport default ClientShow;\n","import { ClientContextProvider } from './context/ClientProvider.jsx';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport ClientSearchForm from './components/client-search-component/client-search-form.component';\nimport ClientCreateForm from './components/client-create-component/client-create.component';\nimport ClientShow from './components/client-show/client-show.component';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nconst App = () => {\n\treturn (\n\t\t<ClientContextProvider>\n\t\t\t<Container className='pt-3'>\n\t\t\t\t<Row className='justify-content-center'>\n\t\t\t\t\t<h1 className='pt-5'>Rewards App</h1>\n\t\t\t\t</Row>\n\t\t\t\t<Row className='justify-content-around'>\n\t\t\t\t\t<ClientSearchForm />\n\t\t\t\t\t<ClientCreateForm />\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<ClientShow />\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</ClientContextProvider>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}